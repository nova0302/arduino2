
#+options: toc:nil ^:nil tags:t f:t
#+author: Sanglae Kim
#+title: 07. Interrupt
#+subtitle: Interrupt
#+description: 
#+beamer_theme: Berlin
#+beamer_font_theme: professionalfonts
#+setupfile:~/org-html-themes/setup/theme-bigblow.setup
#+HTML_HEAD_EXTRA: <style>pre {font-size:18px; font-family: 'consolas';}</style>
* 학습목표
  - Interrupt에 대한 동작 원리를 이해하고 이를 활용하여 프로그램을 작성할 수 있다.
  - GPIO Interrupt에 대한 동작 원리를 이해하고 이를 활용하여 프로그램을 작성할 수 있다.
  - Timer Interrupt에 대한 동작 원리를 이해하고 이를 활용하여 프로그램을 작성할 수 있다.

* [[target][Interrupt]]
**** 보드별 인터럽트 핀
|-----------------------------------+------------------------------------|
| Board                             | Digital pins usable for interrupts |
|-----------------------------------+------------------------------------|
| /                                 | <                                  |
| Uno, Nano, Mini, other 328-based  | 2, 3                               |
| _Mega, Mega2560, MegaADK_         | 2, 3, 18, 19, 20, 21               |
| Micro, Leonardo, other 32u4-based | 0, 1, 2, 3, 7                      |
| Zero                              | all digital pins, except 4         |
| MKR1000 Rev.1                     | 0, 1, 4, 5, 6, 7, 8, 9, A1, A2     |
| Due                               | all digital pins                   |
| 101                               | all digital pins                   |
|-----------------------------------+------------------------------------|

**** Interrupt Image
#+ATTR_HTML: :width 800 :hight 600
   [[./images/interrupt.jpg]]
**** 예제소스 
#+BEGIN_SRC C -n
  #include <Servo.h>
  // A0 <-> 가변저항
  // 7  <-> 서보모터
  // 2  <-> 딥스위치 
  Servo myServo;
  const byte ledPin = 13;
  const byte interruptPin = 2; // 1. <- 인터럽트핀 정의
  int ledValue = 0;

  // 2. <- 인터럽트 처리를 위한 변수 
  volatile bool ledFlag = false;

  void setup (){
    // 3. <- 인터럽트핀 모드설정
    pinMode(interruptPin, INPUT);
    // 4. <- 인터럽트핀 설정                    핀             ISR         동작시점 
    attachInterrupt(digitalPinToInterrupt(interruptPin), increaseLED, RISING);
    myServo.attach (7);
    delay (1000);
  }

  void loop (){
    myServo.write ( map( analogRead(A0), 0, 1023, 0, 180));
    analogWrite(ledPin, ledValue);
    delay (100);

    if (ledFlag) {
      ledFlag = false;
      if(ledValue == 255) ledValue =0;
      else ledValue++;
    }
  }
  // 5. <- ISR 정의
  void increaseLED() {ledFlag = true;}
#+END_SRC
* GPIO Interrupt
  

* Timer Interrupt
